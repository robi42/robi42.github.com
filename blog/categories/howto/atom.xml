<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Howto | Robi's Blog]]></title>
  <link href="http://robi42.github.com/blog/categories/howto/atom.xml" rel="self"/>
  <link href="http://robi42.github.com/"/>
  <updated>2014-09-28T15:02:03+02:00</updated>
  <id>http://robi42.github.com/</id>
  <author>
    <name><![CDATA[Robert Thurnher]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pragmatic App Stats With R]]></title>
    <link href="http://robi42.github.com/blog/2012/10/21/pragmatic-app-stats-with-r/"/>
    <updated>2012-10-21T15:00:00+02:00</updated>
    <id>http://robi42.github.com/blog/2012/10/21/pragmatic-app-stats-with-r</id>
    <content type="html"><![CDATA[<p>Here're some tips for conveniently generating automated visual app stats from MySQL data.</p>

<p>Recommended toolchain:</p>

<ul>
<li><a href="http://www.r-project.org/">R</a> + <a href="http://www.rstudio.org/">RStudio</a></li>
<li><a href="http://cran.r-project.org/web/packages/RMySQL/">RMySQL</a> + <a href="http://ggplot2.org/">ggplot2</a></li>
<li>*nix, cron + mailx &amp; co.</li>
</ul>


<p>Corresponding code bits to get one started:</p>

<p>{% codeblock Simplified R script lang:r %}</p>

<h1>!/usr/bin/Rscript</h1>

<h1>install.packages('RMySQL')</h1>

<h1>install.packages('ggplot2')</h1>

<p>library(RMySQL)
library(ggplot2)
library(grid)</p>

<h1>PNG layout of plots helper.</h1>

<p>vplayout &lt;- function(x, y) viewport(layout.pos.row=x, layout.pos.col=y)</p>

<h1>Connect to DB.</h1>

<p>dbUsername &lt;- 'some_user'
dbPassword &lt;- 'some_password'
dbName     &lt;- 'app_stats_snapshot'
dbHost     &lt;- 'localhost'</p>

<p>dbConnection &lt;- dbConnect(MySQL(), user=dbUsername, password=dbPassword,</p>

<pre><code>                      dbname=dbName, host=dbHost)
</code></pre>

<h1>Exemplary queries.</h1>

<p>recordsPerDayQuery <-
  'select date(created_at) as Day, count(*) as Count from records where created_at >= "2012-1-1" and date(created_at) &lt; date(now()) group by Day'</p>

<p>otherRecordsPerDayQuery <-
  'select date(created_at) as Day, count(*) as Count from other_records where created_at >= "2012-1-1" and date(created_at) &lt; date(now()) group by Day'</p>

<h1>...</h1>

<h1>Query data and plot charts.</h1>

<p>d1 &lt;- dbGetQuery(dbConnection, recordsPerDayQuery)</p>

<p>xlabText &lt;- '2012'; ylabText &lt;- 'Count'
Records &lt;- d1$Count
heading1 &lt;- 'Records per Day'</p>

<p>plot1 &lt;- qplot(as.Date(d1$Day), d1$Count, geom='line', color=Records,</p>

<pre><code>           main=heading1, xlab=xlabText, ylab=ylabText)
</code></pre>

<p>d2 &lt;- dbGetQuery(dbConnection, otherRecordsPerDayQuery)</p>

<p>Other &lt;- d2$Count
heading2 &lt;- 'Other Records per Day'</p>

<p>plot2 &lt;- qplot(as.Date(d2$Day), d2$Count, geom='line', color=Other,</p>

<pre><code>           main=heading2, xlab='2012', ylab='Count')
</code></pre>

<h1>...</h1>

<h1>Write data tables to mail text file.</h1>

<p>mailTextFilename &lt;- '/path/to/stats-mail.txt'</p>

<p>cat(paste('Hi,\n\n#', heading1, '\n'), file=mailTextFilename)
write.table(d1, file=mailTextFilename, append=TRUE,</p>

<pre><code>        row.names=FALSE, quote=FALSE, sep=' | ')
</code></pre>

<p>cat(paste('\n#', heading2, '\n'), file=mailTextFilename, append=TRUE)
write.table(d2, file=mailTextFilename, append=TRUE,</p>

<pre><code>        row.names=FALSE, quote=FALSE, sep=' | ')
</code></pre>

<h1>...</h1>

<h1>Make PNG with plotted charts.</h1>

<p>png('/path/to/stats.png', width=1024, height=768)</p>

<p>grid.newpage()
pushViewport(viewport(layout=grid.layout(2, 1)))</p>

<p>print(plot1, vp=vplayout(1, 1))
print(plot2, vp=vplayout(2, 1))</p>

<h1>...</h1>

<p>dev.off()</p>

<p>{% endcodeblock %}</p>

<p>{% codeblock Related crontab sending stats mail once per week lang:bash %}</p>

<h1>m h  dom mon dow   command</h1>

<p>30 4 * * 1 /path/to/stats.r
0  5 * * 1 mailx -s '[Example] Stats' -a /path/to/stats.png stats@example.com &lt; /path/to/stats-mail.txt
{% endcodeblock %}</p>

<p>HTH.</p>
]]></content>
  </entry>
  
</feed>
